<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	
	
	
	<!-- 注解驱动  -->
 	<mvc:annotation-driven/>

	<!-- 解决获取不到静态资源	-->
	<!-- 方法一 指定文件地址
	<mvc:resources mapping="/javascript/**"  location="/resources/js/"/>
    <mvc:resources mapping="/styles/**"   location="/resources/css/"/>
    <mvc:resources mapping="/images/**" location="/resources/image/"/>
	<mvc:resources mapping="/html/**"   location="/"/>
	-->
	<mvc:resources mapping="/javascript/**"  location="/resources/js/"/>
	<mvc:resources mapping="/styles/**"   location="/resources/css/"/>
	<mvc:resources mapping="/images/**" location="/resources/image/"/>
	<!-- 方法二 全局匹配 -->
	<mvc:resources location="/" mapping="/**/*.html"/>
	<mvc:resources location="/" mapping="/**/*.js"/>
	<mvc:resources location="/" mapping="/**/*.css"/>
	<mvc:resources location="/" mapping="/**/*.png"/>
	<mvc:resources location="/" mapping="/**/*.gif"/>

	<mvc:default-servlet-handler />
        
	<!-- 扫描器 -->
	<!--  <context:component-scan base-package="com.zzy.controller" />   
     当出现问题的时候可以尝试改成这样-->
    <context:component-scan base-package="com.sso.controller" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>   
    </context:component-scan>
	<!-- 扫描webservice -->
	<context:component-scan base-package="com.sso.webservice"/>
	<!-- 扫描 service -->
	<context:component-scan base-package="com.sso.service"/>
	<!-- 扫描实体 -->
	<context:component-scan base-package="com.sso.model"/>
	<!-- 扫描其他 -->
	<context:component-scan base-package="com.sso.*"/>

 	<!--  配置 HanderMapping 根据bean name 找到 对应的 Controller -->
 	<bean class="org.springframework.web.servlet.mvc.support.ControllerBeanNameHandlerMapping"></bean>
	<!-- 视图解析器		解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/"/>
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=""/>
	</bean>

	<!-- 防止 懒加载失败 这个有问题-->
	<!--<mvc:interceptors>
		<bean class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
			<property name="sessionFactory" ref="sessionFactory"/>
		</bean>
	</mvc:interceptors>-->


	<!-- 	支持文件上传  -->
	<!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>  -->
	
	
	
	<!-- 支持json返回
  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">      
        <property name="messageConverters">      
            <list >      
                <ref bean="mappingJacksonHttpMessageConverter" />      
            </list>      
        </property>      
    </bean>  
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">    
    <property name="supportedMediaTypes">    
        <list>    
            <value>application/json;charset=UTF-8</value>    
       </list>    
    </property>  
	</bean> 
	  避免IE在ajax请求时，返回json出现下载 
   <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">	
    <property name="supportedMediaTypes">
      <list>
        <value>text/html;charset=UTF-8</value>
      </list>
    </property>
  </bean>
	
	 -->

	<!-- 拦截器 -->
	<mvc:interceptors>

		<mvc:interceptor>
			<mvc:mapping path="/api/**" />
			<bean class="com.sso.auth.Authority" />
		</mvc:interceptor>

		<!-- 这样配置 回去找 com.sso.auth.AuthorityRestFilter 类中的 excludeUrls 免除过滤 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.sso.auth.Authority">
				<property name="excludeUrls">
					<list>
						<value>loginController.do?goPwdInit</value>
						<value>loginController.do?pwdInit</value>
						<value>loginController.do?login</value>
						<value>loginController.do?logout</value>
					</list>
				</property>
				<!-- 模糊匹配 -->
				<property name="excludeContainUrls">
					<list>
						<value>toLogin.do</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	 
</beans>